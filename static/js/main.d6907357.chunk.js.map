{"version":3,"sources":["components/VideoPreview.js","components/HomePage.js","components/VRPlayer.jsx","App.js","index.js"],"names":["VideoPreview","_ref","videoId","videoTitle","thumbnailUrl","_jsx","style","marginBottom","children","_jsxs","Link","to","concat","src","alt","maxWidth","height","HomePage","videoData","id","title","process","sectionStyle","textAlign","videoListItemStyle","width","boxShadow","borderRadius","overflow","display","flexDirection","alignItems","justifyContent","minHeight","padding","listStyle","margin","map","video","backgroundColor","VRPlayer","useParams","videoRef","useRef","videoInfo","filePath","useEffect","scene","document","querySelector","videoURL","console","log","createElement","setAttribute","onloadeddata","videosphere","appendChild","current","enterVR","_asyncToGenerator","_regeneratorRuntime","mark","_callee","session","baseLayer","wrap","_context","prev","next","navigator","xr","isSessionSupported","sent","requestSession","requiredFeatures","XRWebGLLayer","renderer","updateRenderState","requestReferenceSpace","then","referenceSpace","requestAnimationFrame","time","frame","t0","error","stop","apply","arguments","vrButton","innerText","onclick","elem","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","enterFullscreen","cursor","camera","onClick","play","pause","App","Router","Routes","Route","path","element","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.d6907357.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst VideoPreview = ({ videoId, videoTitle, thumbnailUrl }) => {\r\n  return (\r\n    <div style={{ marginBottom: '5px' }}>\r\n      <Link to={`/video/${videoId}`}>\r\n        <img src={thumbnailUrl} alt={`Thumbnail for ${videoTitle}`} style={{ maxWidth: '100%', height: 'auto' }} />\r\n        <h3>{videoTitle}</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPreview;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport VideoPreview from './VideoPreview';\r\n\r\nconst HomePage = () => {\r\n  const url = process.env.PUBLIC_URL + \"/images/gslab_gavs.png\";\r\n  const eagle = process.env.PUBLIC_URL + \"/images/eagle.png\";\r\n  const sea = process.env.PUBLIC_URL + \"/images/360-sea.png\";\r\n  const london_bridge = process.env.PUBLIC_URL + \"/images/london_bridge.png\";\r\n\r\n  const videoData = [\r\n    {\r\n      id: 1,\r\n      title: 'London Bridge',\r\n      thumbnailUrl: london_bridge,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Dubai in 360',\r\n      thumbnailUrl: sea,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Eagle Soaring in Skies.',\r\n      thumbnailUrl: eagle,\r\n    }\r\n    // Add more video data as needed\r\n  ];\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    minHeight: '100vh',\r\n  };\r\n\r\n  const headerStyle = {\r\n    marginBottom: '5px',\r\n    width: '80%',\r\n    textAlign: 'center',\r\n    padding: '5px',\r\n  };\r\n\r\n  const logoStyle = {\r\n    maxWidth: '100%',\r\n    height: 'auto',\r\n    width: '45%',\r\n  };\r\n\r\n  const sectionStyle = {\r\n    marginBottom: '20px',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const videoListStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    listStyle: 'none',\r\n    padding: '0',\r\n    margin: '0',\r\n  };\r\n\r\n  const videoListItemStyle = {\r\n    marginBottom: '20px',\r\n    width: '300px', // Set a fixed width for each card\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '8px',\r\n    overflow: 'hidden',\r\n  };\r\n\r\n  const footerStyle = {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    backgroundColor: '#f2f2f2',\r\n    padding: '10px',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <header style={headerStyle}>\r\n        <img src={url} alt=\"Company Logo\" style={logoStyle} />\r\n      </header>\r\n      <section style={sectionStyle}>\r\n        <h2>Welcome to VR Player!</h2>\r\n        {/* Add more company details here */}\r\n      </section>\r\n\r\n      <section style={sectionStyle}>\r\n        <h2>360 Video Gallery</h2>\r\n        <ul style={videoListStyle}>\r\n          {videoData.map((video) => (\r\n            <li key={video.id} style={videoListItemStyle}>\r\n               <Link to={`/video/${video.id}`}></Link>\r\n              <VideoPreview\r\n                videoId={video.id}\r\n                videoTitle={video.title}\r\n                thumbnailUrl={video.thumbnailUrl}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      <footer style={footerStyle}>\r\n        <p>&copy; 2023 GsLab | GAVS. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport 'aframe';\r\n\r\nconst VRPlayer = () => {\r\n  const { id } = useParams();\r\n  const videoData = {\r\n    1: {\r\n      title: 'Video 1',\r\n      filePath: 'london_bridge.mp4',\r\n    },\r\n    2: {\r\n      title: 'Video 2',\r\n      filePath: '360-sea-mountain.mp4',\r\n    },\r\n    3: {\r\n      title: 'Video 3',\r\n      filePath: 'eagle-360.mp4',\r\n    },\r\n    // Add more videos as needed\r\n  };\r\n\r\n  const videoRef = useRef(null);\r\n\r\n  const videoInfo = videoData[id];\r\n\r\n  const enterFullscreen = () => {\r\n    const elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const scene = document.querySelector('a-scene');\r\n    // const videoURL = process.env.PUBLIC_URL + '/' + '360-sea-mountain.mp4';\r\n    const videoURL = process.env.PUBLIC_URL + '/' + videoInfo.filePath;\r\n    console.log('file path - ', videoURL)\r\n    const video = document.createElement('video');\r\n    video.setAttribute('src', videoURL);\r\n    video.setAttribute('crossorigin', 'anonymous');\r\n    video.setAttribute('autoplay', true);\r\n    video.setAttribute('loop', true);\r\n    video.setAttribute('webkit-playsinline', true);\r\n    video.setAttribute('playsinline', true);\r\n    video.setAttribute('muted', true);\r\n    video.setAttribute('id', 'video');\r\n\r\n    video.onloadeddata = () => {\r\n      const videosphere = document.createElement('a-videosphere');\r\n      videosphere.setAttribute('src', '#video');\r\n      videosphere.setAttribute('rotation', '0 180 0');\r\n      scene.appendChild(videosphere);\r\n\r\n      // Start playing the video after it's loaded\r\n      // video.play();\r\n    };\r\n\r\n    scene.appendChild(video);\r\n    videoRef.current = video;\r\n\r\n    const enterVR = async () => {\r\n      const xrSessionSupported = await navigator.xr.isSessionSupported('immersive-vr');\r\n      if (xrSessionSupported) {\r\n        try {\r\n          const session = await navigator.xr.requestSession('immersive-vr', {\r\n            requiredFeatures: ['viewer', 'local-floor'],\r\n          });\r\n\r\n          const baseLayer = new XRWebGLLayer(session, scene.renderer);\r\n          session.updateRenderState({ baseLayer });\r\n          session.requestReferenceSpace('local-floor').then((referenceSpace) => {\r\n            session.requestAnimationFrame((time, frame) => {\r\n              // Update VR scene\r\n            });\r\n          });\r\n        } catch (e) {\r\n          console.error('Error entering VR mode:', e);\r\n        }\r\n      }\r\n    };\r\n\r\n    const vrButton = document.createElement('button');\r\n    vrButton.innerText = 'Click to Enter VR Mode';\r\n    vrButton.onclick = () => {\r\n      enterFullscreen();\r\n      enterVR();\r\n    };\r\n    scene.appendChild(vrButton);\r\n\r\n    return () => {\r\n      // Clean up code if needed\r\n    };\r\n  }, [id, videoInfo]);\r\n  \r\n  const handlePlay = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.play();\r\n    }\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh' }}>\r\n      <a-scene cursor=\"rayOrigin: mouse\">\r\n        <a-entity camera look-controls></a-entity>\r\n      </a-scene>\r\n      <button onClick={handlePlay}>Start Video</button>\r\n      <button onClick={handlePause}>Stop Video</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default VRPlayer;\r\n","// import { useEffect, useRef, useState } from \"react\";\r\n// import VideoJS from \"./components/VideoJS\";\r\n// import Box from \"./components/Box\";\r\n// import CameraPicker from \"./components/CameraPicker/CameraPicker\";\r\n// import Highlights from \"./components/Highlights\";\r\n// import ChosenHighlight from \"./components/ChosenHighlight\";\r\n// import VideoCard from \"./components/VideoCard\";\r\n// import 'webxr-polyfill';\r\n\r\n\r\n// import { Typography } from \"@mui/material\";\r\n\r\n// import { data } from \"./data.js\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Container, InputGroup, Table } from \"react-bootstrap\";\r\n// import Form from \"react-bootstrap/Form\";\r\n\r\n// import \"./styles.css\";\r\n// import VRThreeJS from \"./components/VRThreeJS\";\r\n// import MyVRScene from \"./components/MyVRScene\";\r\n// import VRPlayer from \"./components/VRPlayer.jsx\";\r\n\r\n// export default function App() {\r\n//   const [team, setTeam] = useState();\r\n//   const [search, setSearch] = useState(\"\");\r\n\r\n//   const [vidtype, setVidtype] = useState(\"\");\r\n\r\n//   const videoURL = process.env.PUBLIC_URL + '/' + '360-sea-mountain.mp4';\r\n//   console.log('Printing video URL - ', videoURL)\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     console.log(team);\r\n//   }, [team]);\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n//         360<span>&#176;</span> View\r\n//       </Typography>\r\n//           <Box\r\n//             style={{\r\n//               maxWidth: 900,\r\n//               margin: \"0 auto\",\r\n//               overflow: \"hidden\"\r\n//             }}\r\n//           >\r\n//             <ChosenHighlight team={team} />\r\n\r\n          \r\n\r\n//           </Box> */}\r\n\r\n//       {/* <VRThreeJS /> */}\r\n//       <div style={{ display: 'flex' }}>\r\n//         {/* <MyVRScene width=\"50%\" height=\"50%\" /> */}\r\n//         <VRPlayer width=\"50%\" height=\"50%\" />\r\n//       </div>\r\n\r\n//     </div>\r\n//   );\r\n// }\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport HomePage from './components/HomePage';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport VRPlayer from './components/VRPlayer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/VR-React\" element={<HomePage />} />\r\n        <Route path=\"/video/:id\" element={<VRPlayer />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(<App />);\r\n"],"sourceRoot":""}