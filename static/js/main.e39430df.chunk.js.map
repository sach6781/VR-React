{"version":3,"sources":["components/CarouselScroll.js","components/VideoCard.js","components/VRPlayer.jsx","App.js","index.js"],"names":["responsive","desktop","breakpoint","max","min","items","tablet","mobile","React","Component","VideoCard","VRPlayer","_useState","useState","_useState2","_slicedToArray","videoLoaded","setVideoLoaded","useEffect","scene","document","querySelector","video","createElement","setAttribute","process","onloadeddata","appendChild","videosphere","_jsx","children","_jsxs","camera","src","rotation","geometry","material","position","text","events","click","vrDisplay","components","enterVR","console","error","App","team","_useState3","_useState4","_useState5","_useState6","log","style","display","width","height","rootElement","getElementById","createRoot","render"],"mappings":"6ZAIMA,G,OAAa,CACjBC,QAAS,CACPC,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,GAETC,OAAQ,CACNJ,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,GAETE,OAAQ,CACNL,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,KAIkBG,IAAMC,U,4DCHpBC,ICuHAC,EA/DE,WACf,IAAAC,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAmClC,OAjCAI,qBAAU,WACR,IAAMC,EAAQC,SAASC,cAAc,WAG/BC,EAAQF,SAASG,cAAc,SACrCD,EAAME,aAAa,MAHFC,kCAIjBH,EAAME,aAAa,cAAe,aAClCF,EAAME,aAAa,YAAY,GAC/BF,EAAME,aAAa,QAAQ,GAC3BF,EAAME,aAAa,sBAAsB,GACzCF,EAAME,aAAa,eAAe,GAClCF,EAAME,aAAa,SAAS,GAC5BF,EAAME,aAAa,KAAM,SAGzBF,EAAMI,aAAe,WACnBT,GAAe,EACjB,EAEAE,EAAMQ,YAAYL,EACpB,GAAG,IAEHJ,qBAAU,WACR,GAAIF,EAAa,CACf,IAAMY,EAAcR,SAASG,cAAc,iBAC3CK,EAAYJ,aAAa,MAAO,UAChCI,EAAYJ,aAAa,WAAY,WAEvBJ,SAASC,cAAc,WAC/BM,YAAYC,EACpB,CACF,GAAG,CAACZ,IAGFa,cAAA,OAAAC,SACEC,eAAA,WAAAD,SAAA,CACED,cAAA,YAAUG,QAAM,EAAC,qBACjBH,cAAA,iBAAeI,IAAI,SAASC,SAAS,YACrCL,cAAA,YACEM,SAAS,wCACTC,SAAS,4BACTC,SAAS,WACTC,KAAK,+CACLC,OAAQ,CACNC,MAAO,WACL,IAAMC,EAAYrB,SAASC,cAAc,WAAWA,cAAc,oBAAoBqB,WAAW,iBAAiBD,UAC9GA,EACFA,EAAUE,UAEVC,QAAQC,MAAM,uBAElB,SAOZ,EC/Ge,SAASC,IACtB,IAAAlC,EAAwBC,qBAAUC,EAAAC,YAAAH,EAAA,GAA3BmC,EAAIjC,EAAA,GACXkC,GADoBlC,EAAA,GACQD,mBAAS,KAAGoC,EAAAlC,YAAAiC,EAAA,GAExCE,GAFaD,EAAA,GAAWA,EAAA,GAEMpC,mBAAS,KAAGsC,EAAApC,YAAAmC,EAAA,GAA5BC,EAAA,GAAYA,EAAA,GAY1B,OATAP,QAAQQ,IAAI,wBADK3B,kCAIjBP,qBAAU,WAER0B,QAAQQ,IAAIL,EACd,GAAG,CAACA,IAIFlB,cAAA,OAAAC,SAkBED,cAAA,OAAKwB,MAAO,CAAEC,QAAS,QAASxB,SAE9BD,cAAClB,EAAQ,CAAC4C,MAAM,MAAMC,OAAO,WAKrC,CC3DA,IAAMC,EAAcrC,SAASsC,eAAe,QAC/BC,qBAAWF,GAEnBG,OAAO/B,cAACiB,EAAG,I","file":"static/js/main.e39430df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"./CarouselScroll.css\";\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 3\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 2\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 1\r\n  }\r\n};\r\n\r\nclass CarouselScroll extends React.Component {\r\n  state = { additionalTransfrom: 0 };\r\n  render() {\r\n    const CustomSlider = ({ carouselState }) => {\r\n      let value = 0;\r\n      let carouselItemWidth = 0;\r\n      if (this.Carousel) {\r\n        carouselItemWidth = this.Carousel.state.itemWidth;\r\n        const maxTranslateX = Math.round(\r\n          // so that we don't over-slide\r\n          carouselItemWidth *\r\n            (this.Carousel.state.totalItems -\r\n              this.Carousel.state.slidesToShow) +\r\n            150\r\n        );\r\n        value = maxTranslateX / 100; // calculate the unit of transform for the slider\r\n      }\r\n      const { transform } = carouselState;\r\n      return (\r\n        <div className=\"custom-slider\">\r\n          <input\r\n            type=\"range\"\r\n            value={Math.round(Math.abs(transform) / value)}\r\n            defaultValue={0}\r\n            max={\r\n              (carouselItemWidth *\r\n                (carouselState.totalItems - carouselState.slidesToShow) +\r\n                (this.state.additionalTransfrom === 150 ? 0 : 150)) /\r\n              value\r\n            }\r\n            onChange={(e) => {\r\n              if (this.Carousel.isAnimationAllowed) {\r\n                this.Carousel.isAnimationAllowed = false;\r\n              }\r\n              const nextTransform = e.target.value * value;\r\n              const nextSlide = Math.round(nextTransform / carouselItemWidth);\r\n              if (\r\n                e.target.value == 0 &&\r\n                this.state.additionalTransfrom === 150\r\n              ) {\r\n                this.Carousel.isAnimationAllowed = true;\r\n                this.setState({ additionalTransfrom: 0 });\r\n              }\r\n              this.Carousel.setState({\r\n                transform: -nextTransform, // padding 20px and 5 items.\r\n                currentSlide: nextSlide\r\n              });\r\n            }}\r\n            className=\"custom-slider__input\"\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n    return (\r\n      <Carousel\r\n        ssr={false}\r\n        ref={(el) => (this.Carousel = el)}\r\n        partialVisbile={false}\r\n        customButtonGroup={<CustomSlider />}\r\n        itemClass=\"slider-image-item\"\r\n        responsive={responsive}\r\n        containerClass=\"carousel-container-with-scrollbar\"\r\n        additionalTransfrom={-this.state.additionalTransfrom}\r\n        beforeChange={(nextSlide) => {\r\n          if (nextSlide !== 0 && this.state.additionalTransfrom !== 150) {\r\n            this.setState({ additionalTransfrom: 150 });\r\n          }\r\n          if (nextSlide === 0 && this.state.additionalTransfrom === 150) {\r\n            this.setState({ additionalTransfrom: 0 });\r\n          }\r\n        }}\r\n      >\r\n        <div class=\"image-container increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>1</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/photo-1549989476-69a92fa57c36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\r\n          />\r\n        </div>\r\n        <div class=\"increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>2</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/photo-1549396535-c11d5c55b9df?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"image-container increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>3</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/photo-1550133730-695473e544be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"image-container increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>4</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/photo-1550167164-1b67c2be3973?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"image-container increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>5</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/photo-1550353175-a3611868086b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\r\n          />\r\n        </div>\r\n        <div class=\"image-container increase-size\">\r\n          <div class=\"image-container-text\">\r\n            <p>6</p>\r\n          </div>\r\n          <img\r\n            draggable={false}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            src=\"https://images.unsplash.com/flagged/photo-1556091766-9b818bc73fad?ixlib=rb-1.2.1&auto=format&fit=crop&w=1504&q=80\"\r\n          />\r\n        </div>\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselScroll;\r\n","import React from \"react\";\r\n\r\nfunction VideoCard({ image, title, date, name }) {\r\n  return (\r\n    <div>\r\n      <div className={name}>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n      <div className=\"videoText\">\r\n        <h4>{title}</h4>\r\n        <p>{date}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoCard;\r\n","// import React, { useState, useEffect, useRef } from 'react';\r\n// import 'aframe';\r\n// import 'aframe-react';\r\n\r\n// const MyVRScene1 = () => {\r\n//   const [isMuted, setIsMuted] = useState(true);\r\n//   const videoRef = useRef();\r\n//   const cameraRef = useRef();\r\n//   const videoURL = process.env.PUBLIC_URL + '/' +'360-sea-mountain.mp4';\r\n\r\n//   useEffect(() => {\r\n//     const playVideo = async () => {\r\n//       if (videoRef.current) {\r\n//         try {\r\n//           await videoRef.current.play();\r\n//         } catch (error) {\r\n//           console.error('Autoplay failed:', error);\r\n//           // Handle autoplay failure here\r\n//         }\r\n//       }\r\n//     };\r\n\r\n//     playVideo();\r\n//   }, []);\r\n\r\n//   const toggleMute = () => {\r\n//     if (videoRef.current) {\r\n//       videoRef.current.muted = !videoRef.current.muted;\r\n//       setIsMuted(videoRef.current.muted);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{width: '50%', float: 'right'}}>\r\n//     <a-scene embedded style={{ width: '100%' }}>\r\n//       <a-assets>\r\n//         <video\r\n//           id=\"myVideo\"\r\n//           src={videoURL}\r\n//           loop\r\n//           autoplay\r\n//           muted={isMuted}\r\n//           playsinline\r\n//           crossorigin=\"anonymous\"\r\n//           ref={videoRef}\r\n\r\n//         ></video>\r\n//       </a-assets>\r\n\r\n//       {/* Use a-sky to display the video content as the environment background */}\r\n//       <a-sky src=\"#myVideo\" rotation=\"0 180 0\"></a-sky>\r\n\r\n//       {/* Camera for VR headset */}\r\n//       <a-camera ref={cameraRef} position=\"0 2 0\">\r\n//         <a-cursor></a-cursor>\r\n//       </a-camera>\r\n\r\n//       {/* Mute/Unmute button */}\r\n//       {/* <button onClick={toggleMute}>\r\n//         {isMuted ? 'Unmute' : 'Mute'}\r\n//       </button> */}\r\n//     </a-scene>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MyVRScene1;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'aframe';\r\n\r\nconst VRPlayer = () => {\r\n  const [videoLoaded, setVideoLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const scene = document.querySelector('a-scene');\r\n    const videoURL = process.env.PUBLIC_URL + '/' + '360-sea-mountain.mp4';\r\n\r\n    const video = document.createElement('video');\r\n    video.setAttribute('src', videoURL); // Replace with your video path\r\n    video.setAttribute('crossorigin', 'anonymous');\r\n    video.setAttribute('autoplay', true);\r\n    video.setAttribute('loop', true);\r\n    video.setAttribute('webkit-playsinline', true);\r\n    video.setAttribute('playsinline', true);\r\n    video.setAttribute('muted', true);\r\n    video.setAttribute('id', 'video');\r\n\r\n    // When the video is loaded, set the flag to true\r\n    video.onloadeddata = () => {\r\n      setVideoLoaded(true);\r\n    };\r\n\r\n    scene.appendChild(video);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (videoLoaded) {\r\n      const videosphere = document.createElement('a-videosphere');\r\n      videosphere.setAttribute('src', '#video');\r\n      videosphere.setAttribute('rotation', '0 180 0');\r\n\r\n      const scene = document.querySelector('a-scene');\r\n      scene.appendChild(videosphere);\r\n    }\r\n  }, [videoLoaded]);\r\n\r\n  return (\r\n    <div>\r\n      <a-scene>\r\n        <a-entity camera look-controls></a-entity>\r\n        <a-videosphere src=\"#video\" rotation=\"0 180 0\"></a-videosphere>\r\n        <a-entity\r\n          geometry=\"primitive: plane; width: 2; height: 2\"\r\n          material=\"color: blue; opacity: 0.5\"\r\n          position=\"0 1.6 -4\"\r\n          text=\"value: Click to Enter VR Mode; align: center\"\r\n          events={{\r\n            click: function () {\r\n              const vrDisplay = document.querySelector('a-scene').querySelector('a-entity[camera]').components['look-controls'].vrDisplay;\r\n              if (vrDisplay) {\r\n                vrDisplay.enterVR();\r\n              } else {\r\n                console.error('No VR display found.');\r\n              }\r\n            }\r\n          }}\r\n        ></a-entity>\r\n      </a-scene>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VRPlayer;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport VideoJS from \"./components/VideoJS\";\r\nimport Box from \"./components/Box\";\r\nimport CameraPicker from \"./components/CameraPicker/CameraPicker\";\r\nimport Highlights from \"./components/Highlights\";\r\nimport ChosenHighlight from \"./components/ChosenHighlight\";\r\nimport VideoCard from \"./components/VideoCard\";\r\nimport 'webxr-polyfill';\r\n\r\n\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport { data } from \"./data.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, InputGroup, Table } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"./styles.css\";\r\nimport VRThreeJS from \"./components/VRThreeJS\";\r\nimport MyVRScene from \"./components/MyVRScene\";\r\nimport VRPlayer from \"./components/VRPlayer.jsx\";\r\n\r\nexport default function App() {\r\n  const [team, setTeam] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [vidtype, setVidtype] = useState(\"\");\r\n\r\n  const videoURL = process.env.PUBLIC_URL + '/' + '360-sea-mountain.mp4';\r\n  console.log('Printing video URL - ', videoURL)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(team);\r\n  }, [team]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n        360<span>&#176;</span> View\r\n      </Typography>\r\n          <Box\r\n            style={{\r\n              maxWidth: 900,\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            <ChosenHighlight team={team} />\r\n\r\n          \r\n\r\n          </Box> */}\r\n\r\n      {/* <VRThreeJS /> */}\r\n      <div style={{ display: 'flex' }}>\r\n        {/* <MyVRScene width=\"50%\" height=\"50%\" /> */}\r\n        <VRPlayer width=\"50%\" height=\"50%\" />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(<App />);\r\n"],"sourceRoot":""}